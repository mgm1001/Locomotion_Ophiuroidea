#Following the scripts: https://github.com/mgm1001/Locomotion_Ophiuroidea/blob/main/Locomotion_analysis.py

import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from matplotlib import style

plt.figure(figsize=(20,10))

c1='#A7414A'
c2='#BF988F'
c3='#6A8A82'
c4='#A37C26'
c5='#563838'

plt.subplot(2,3,1)
plt.plot(x_F1, y_F1, 'o-', label="arm1", color=c1);
plt.plot(x_regular_F1, y_regular_F1, 'or', color="black");
plt.plot(x2_F1, y2_F1, 'o-', label="arm2", color=c2);
plt.plot(x_regular2_F1, y_regular2_F1, 'or', color="black");
plt.plot(x3_F1, y3_F1, 'o-', label="arm3", color=c3);
plt.plot(x_regular3_F1, y_regular3_F1, 'or', color="black");
plt.plot(x4_F1, y4_F1, 'o-', label="arm4", color=c4);
plt.plot(x_regular4_F1, y_regular4_F1, 'or', color="black");
plt.plot(x5_F1, y5_F1, 'o-', label="arm5", color=c5);
plt.plot(x_regular5_F1, y_regular5_F1, 'or', color="black");
plt.axis('equal');
plt.title("Frame 1")
plt.legend(framealpha=1, frameon=True);
#plt.savefig(r'D:\Mgoharim\OneDrive - UGent\WE11c125\Mgoharim\Desktop\time1_lanmarks.png')

plt.subplot(2,3,2)
plt.plot(x_F2, y_F2, 'o-', label="arm1", color=c1);
plt.plot(x_regular_F2, y_regular_F2, 'or', color="black");
plt.plot(x2_F2, y2_F2, 'o-', label="arm2", color=c2);
plt.plot(x_regular2_F2, y_regular2_F2, 'or', color="black");
plt.plot(x3_F2, y3_F2, 'o-', label="arm3", color=c3);
plt.plot(x_regular3_F2, y_regular3_F2, 'or', color="black");
plt.plot(x4_F2, y4_F2, 'o-', label="arm4", color=c4);
plt.plot(x_regular4_F2, y_regular4_F2, 'or', color="black");
plt.plot(x5_F2, y5_F2, 'o-', label="arm5", color=c5);
plt.plot(x_regular5_F2, y_regular5_F2, 'or', color="black");
plt.axis('equal');
plt.title("Frame 2")
plt.legend(framealpha=1, frameon=True);

plt.subplot(2,3,3)
plt.plot(x_F3, y_F3, 'o-', label="arm1",color=c1);
plt.plot(x_regular_F3, y_regular_F3, 'or', color="black");
plt.plot(x2_F3, y2_F3, 'o-', label="arm2", color=c2);
plt.plot(x_regular2_F3, y_regular2_F3, 'or', color="black");
plt.plot(x3_F3, y3_F3, 'o-', label="arm3", color=c3);
plt.plot(x_regular3_F3, y_regular3_F3, 'or', color="black");
plt.plot(x4_F3, y4_F3, 'o-', label="arm4", color=c4);
plt.plot(x_regular4_F3, y_regular4_F3, 'or', color="black");
plt.plot(x5_F3, y5_F3, 'o-', label="arm5", color=c5);
plt.plot(x_regular5_F3, y_regular5_F3, 'or', color="black");
plt.axis('equal');
plt.title("Frame 3")
plt.legend(framealpha=1, frameon=True);


plt.subplot(2,3,4)
plt.plot(x_F4, y_F4, 'o-', label="arm1",color=c1);
plt.plot(x_regular_F4, y_regular_F4, 'or', color="black");
plt.plot(x2_F4, y2_F4, 'o-', label="arm2", color=c2);
plt.plot(x_regular2_F4, y_regular2_F4, 'or', color="black");
plt.plot(x3_F4, y3_F4, 'o-', label="arm3", color=c3);
plt.plot(x_regular3_F4, y_regular3_F4, 'or', color="black");
plt.plot(x4_F4, y4_F4, 'o-', label="arm4", color=c4);
plt.plot(x_regular4_F4, y_regular4_F4, 'or', color="black");
plt.plot(x5_F4, y5_F4, 'o-', label="arm5", color=c5);
plt.plot(x_regular5_F4, y_regular5_F4, 'or', color="black");
plt.axis('equal');
plt.title("Frame 4")
plt.legend(framealpha=1, frameon=True);


plt.subplot(2,3,5)
plt.plot(x_F5, y_F5, 'o-', label="arm1",color=c1);
plt.plot(x_regular_F5, y_regular_F5, 'or', color="black");
plt.plot(x2_F5, y2_F5, 'o-', label="arm2", color=c2);
plt.plot(x_regular2_F5, y_regular2_F5, 'or', color="black");
plt.plot(x3_F5, y3_F5, 'o-', label="arm3", color=c3);
plt.plot(x_regular3_F5, y_regular3_F5, 'or', color="black");
plt.plot(x4_F5, y4_F5, 'o-', label="arm4", color=c4);
plt.plot(x_regular4_F5, y_regular4_F5, 'or', color="black");
plt.plot(x5_F5, y5_F5, 'o-', label="arm5", color=c5);
plt.plot(x_regular5_F5, y_regular5_F5, 'or', color="black");
plt.axis('equal');
plt.title("Frame 5")
plt.legend(framealpha=1, frameon=True);
plt.savefig('....')
---------------------------------------------------------------------------------------------
color1='#A7414A'
color2='#BF988F'
color3='#6A8A82'
color4='#A37C26'
color5='#563838'

plt.plot(x121, -y121, 'o-',color=color1 );
plt.plot(x122, -y122, 'o-',color=color2);
plt.plot(x123, -y123, 'o-',color=color3);
plt.plot(x124, -y124, 'o-',color=color4);
plt.plot(x125, -y125, 'o-',color=color5);
plt.axis('equal');
-----------------------------------------------------------------------------------

plt.figure(figsize=(10,15))

color1='#A7414A'
color2='#BF988F'
color3='#6A8A82'
color4='#A37C26'
color5='#563838'

plt.plot(x1_F1, -y1_F1, 'o-', label="Frame 1", color=color1, linewidth=8,alpha=0.01);  ## I put - behind y coordinates to have a miror image of the animal (as natural position)
plt.plot(x11_F1, -y11_F1, 'o-' , color=color2,linewidth=8,alpha=0.01);
plt.plot(x12_F1, -y12_F1, 'o-',color=color3,linewidth=8,alpha=0.01);
plt.plot(x13_F1, -y13_F1, 'o-', color=color4,linewidth=8,alpha=0.01);
plt.plot(x14_F1, -y14_F1, 'o-', color=color5,linewidth=8,alpha=0.01);
plt.axis('equal');

plt.plot(x1_F2, -y1_F2, 'o-', label="arm1", color=color1, alpha=0.01,linewidth=8);  ## I put - behind y coordinates to have a miror image of the animal (as natural position)
plt.plot(x11_F2, -y11_F2, 'o-', label="arm2", color=color2, alpha=0.01,linewidth=8);
plt.plot(x12_F2, -y12_F2, 'o-', label="arm3", color=color3, alpha=0.01,linewidth=8);
plt.plot(x13_F2, -y13_F2, 'o-', label="arm4", color=color4, alpha=0.01,linewidth=8);
plt.plot(x14_F2, -y14_F2, 'o-', label="arm5", color=color5, alpha=0.01,linewidth=8);
plt.axis('equal');

plt.plot(x1_F3, -y1_F3, 'o-', label="arm1", color=color1, alpha=0.01,linewidth=8);  ## I put - behind y coordinates to have a miror image of the animal (as natural position)
plt.plot(x11_F3, -y11_F3, 'o-', label="arm2", color=color2, alpha=0.01,linewidth=8);
plt.plot(x12_F3, -y12_F3, 'o-', label="arm3", color=color3, alpha=0.01,linewidth=8);
plt.plot(x13_F3, -y13_F3, 'o-', label="arm4", color=color4, alpha=0.01,linewidth=8);
plt.plot(x14_F3, -y14_F3, 'o-', label="arm5",  color=color5, alpha=0.01,linewidth=8);
plt.axis('equal');

plt.plot(x1_F4, -y1_F4, 'o-', label="arm1", color=color1, alpha=0.01,linewidth=8);  ## I put - behind y coordinates to have a miror image of the animal (as natural position)
plt.plot(x11_F4, -y11_F4, 'o-', label="arm2", color=color2,alpha=0.01,linewidth=8);
plt.plot(x12_F4, -y12_F4, 'o-', label="arm3", color=color3,alpha=0.01,linewidth=8);
plt.plot(x13_F4, -y13_F4, 'o-', label="arm4", color=color4,alpha=0.01,linewidth=8);
plt.plot(x14_F4, -y14_F4, 'o-', label="arm5", color=color5,alpha=0.01,linewidth=8);
plt.axis('equal');

plt.plot(x1_F5, -y1_F5, 'o-', label="Frame 2", color=color1,linewidth=8, alpha=0.5);  ## I put - behind y coordinates to have a miror image of the animal (as natural position)
plt.plot(x11_F5, -y11_F5, 'o-',  color=color2,linewidth=8, alpha=0.5);
plt.plot(x12_F5, -y12_F5, 'o-',  color=color3, linewidth=8,alpha=0.5);
plt.plot(x13_F5, -y13_F5, 'o-', color=color4,linewidth=8, alpha=0.5);
plt.plot(x14_F5, -y14_F5, 'o-', color=color5, linewidth=8,alpha=0.5);
plt.axis('equal');
-------------------------------------------------------------------------------------


df_t=pd.DataFrame(data=None, index=None, columns=['curve name','sinuosity_F1','sinuosity_F2', 'sinuosity_F3','sinuosity_F4','sinuosity_F5',
                                                  'angle_DT_F1',  'angle_DT_F2', 'angle_DT_F3',  'angle_DT_F4', 'angle_DT_F5',
                                                  'dd_F1_F2',  'dd_F2_F3',  'dd_F3_F4',
                                                   'dd_F4_F5','angle direction 1-2', 
                                                  'angle direction 2-3', 'angle direction 3-4', 'angle direction 4-5'], dtype=None, copy=False)
df_t['curve name']= ['curve1', 'curve2', 'curve3', 'curve4', 'curve5']
df_t['sinuosity_F1']=sinuosity1_F1, sinuosity2_F1,sinuosity3_F1,sinuosity4_F1,sinuosity5_F1
df_t['sinuosity_F2']=sinuosity1_F2, sinuosity2_F2,sinuosity3_F2,sinuosity4_F2,sinuosity5_F2
df_t['sinuosity_F3']=sinuosity1_F3, sinuosity2_F3,sinuosity3_F3,sinuosity4_F3,sinuosity5_F3
df_t['sinuosity_F4']=sinuosity1_F4, sinuosity2_F4,sinuosity3_F4,sinuosity4_F4,sinuosity5_F4
df_t['sinuosity_F5']=sinuosity1_F5, sinuosity2_F5,sinuosity3_F5,sinuosity4_F5,sinuosity5_F5


df_t['angle_DT_F1']=phi_total_F1
df_t['angle_DT_F2']=phi_total_F2
df_t['angle_DT_F3']=phi_total_F3
df_t['angle_DT_F4']=phi_total_F4
df_t['angle_DT_F5']=phi_total_F5


df_t['dd_start']=[0,0,0,0,0]
df_t['dd_F1_F2']=disc_dist_F1_F2
df_t['dd_F2_F3']=disc_dist_F2_F3
df_t['dd_F3_F4']=disc_dist_F3_F4
df_t['dd_F4_F5']=disc_dist_F4_F5
df_t['angle direction start']=[0,0,0,0,0]
df_t['angle direction 1-2']=Angles_F1_F2
df_t['angle direction 2-3']=Angles_F2_F3
df_t['angle direction 3-4']=Angles_F3_F4
df_t['angle direction 4-5']=Angles_F4_F5


df_t
--------------------------------------------

dfA=df_t.melt(id_vars=['curve name'], value_vars = ['sinuosity_F1', 'sinuosity_F2' , 'sinuosity_F3', 'sinuosity_F4', 'sinuosity_F5'], var_name = 'sinu' , value_name = 'Sinuosity')

dfB=df_t.melt(id_vars=['curve name'], value_vars = ['angle_DT_F1', 'angle_DT_F2' , 'angle_DT_F3', 'angle_DT_F4', 'angle_DT_F5'], var_name = 'angle_disc-tip' , value_name = 'angle')

dfC=df_t.melt(id_vars=['curve name'], value_vars = [ 'dd_start','dd_F1_F2', 'dd_F2_F3' , 'dd_F3_F4', 'dd_F4_F5'], var_name = 'dd' , value_name = 'discs distance')

dfD=df_t.melt(id_vars=['curve name'], value_vars = ['angle direction start','angle direction 1-2', 'angle direction 2-3' , 'angle direction 3-4', 'angle direction 4-5'], var_name = 'AD' , value_name = 'angle direction')

df_t1= pd.concat([dfA, dfB, dfC, dfD], axis=1)


df_t1["Frame"]=np.zeros(25)
df_t1["Frame"]=['Frame1','Frame1', 'Frame1','Frame1', 'Frame1',
               'Frame2','Frame2', 'Frame2','Frame2', 'Frame2',
               'Frame3','Frame3', 'Frame3','Frame3', 'Frame3',
               'Frame4','Frame4', 'Frame4','Frame4', 'Frame4',
               'Frame5','Frame5', 'Frame5','Frame5', 'Frame5']

--------------------------------
df_t1=df_t1.T.drop_duplicates().T
df_t1 
--------------------------------
df_t1= df_t1.sort_values(by = ['Frame'])
df_t1
--------------------------------
from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()
df_t1['Sinuo'] = scaler.fit_transform(df_t1['Sinuosity'].values.reshape(-1,1))
df_t1['ang'] = scaler.fit_transform(df_t1['angle'].values.reshape(-1,1))
df_t1['distance'] = scaler.fit_transform(df_t1['discs distance'].values.reshape(-1,1))
df_t1['ang_dir'] = scaler.fit_transform(df_t1['angle direction'].values.reshape(-1,1))
df_t1
--------------------------------

#Plot arm angle:
plt.figure(figsize=(7,5))

time=['1', '2', '3', '4', '5']
c1='#A7414A'
c2='#BF988F'
c3='#6A8A82'
c4='#A37C26'
c5='#563838'


plt.plot(time,df_t1.loc[:,['angle']] [df_t1['curve name']=='curve1'], label='Arm 1',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c1)

plt.plot(time,df_t1.loc[:,['angle']] [df_t1['curve name']=='curve2'], label='Arm 2',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c2)

plt.plot(time,df_t1.loc[:,['angle']] [df_t1['curve name']=='curve3'], label='Arm 3',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c3)

plt.plot(time,df_t1.loc[:,['angle']] [df_t1['curve name']=='curve4'], label='Arm 4', marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c4)

plt.plot(time,df_t1.loc[:,['angle']] [df_t1['curve name']=='curve5'], label='Arm 5',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c5)

plt.xlabel('Frame', fontsize=15)
plt.ylabel('Angle', fontsize=15)
plt.legend(bbox_to_anchor=(-0.08, 1),fontsize=12)


plt.tight_layout()
plt.savefig('...')

-----------------------------------------------------------------------------------------------

#Plot slip angle:

plt.figure(figsize=(7,5))

time=['1-2', '2-3', '3-4', '4-5']
c1='#A7414A'
c2='#BF988F'
c3='#6A8A82'
c4='#A37C26'
c5='#563838'

### [1:5] omits the value of 0 at the start time

plt.plot(time,df_t1.loc[:,['angle direction']] [df_t1['curve name']=='curve1'][1:5], label='Arm 1',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c1)

plt.plot(time,df_t1.loc[:,['angle direction']] [df_t1['curve name']=='curve2'][1:5], label='Arm 2',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c2)

plt.plot(time,df_t1.loc[:,['angle direction']] [df_t1['curve name']=='curve3'][1:5], label='Arm 3',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c3)

plt.plot(time,df_t1.loc[:,['angle direction']] [df_t1['curve name']=='curve4'][1:5], label='Arm 4', marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c4)

plt.plot(time,df_t1.loc[:,['angle direction']] [df_t1['curve name']=='curve5'][1:5], label='Arm 5',marker='o',linestyle='dashed', linewidth=2, markersize=12, color=c5)

plt.xlabel('Frame', fontsize=15)
plt.ylabel('Slip Angle', fontsize=15)
#plt.title('Arm slip angle at the center of disc')
plt.legend(bbox_to_anchor=(-0.08, 1),fontsize=12)


plt.tight_layout()
plt.savefig('...')
----------------------------------------------------------------------------------------

# Plot sinuosity:
c1='#A7414A'
c2='#BF988F'
c3='#6A8A82'
c4='#A37C26'
c5='#563838'
plt.figure(figsize=(7,5))
xs=["1", "2", "3", "4", "5"]

ys1=[sinuosity1_F1, sinuosity1_F2,sinuosity1_F3,sinuosity1_F4,sinuosity1_F5]
plt.plot(xs, ys1, "k-", marker='o', linestyle='dashed', linewidth=2, markersize=12, color=c1, label='Arm 1')

ys2=[sinuosity2_F1, sinuosity2_F2,sinuosity2_F3,sinuosity2_F4,sinuosity2_F5]
plt.plot(xs, ys2, "k-", marker='o', linestyle='dashed', linewidth=2, markersize=12, color=c2, label='Arm 2')

ys3=[sinuosity3_F1, sinuosity3_F2,sinuosity3_F3,sinuosity3_F4,sinuosity3_F5]
plt.plot(xs, ys3, "k-", marker='o', linestyle='dashed', linewidth=2, markersize=12, color=c3, label='Arm 3')

ys4=[sinuosity4_F1, sinuosity4_F2,sinuosity4_F3,sinuosity4_F4,sinuosity4_F5]
plt.plot(xs, ys4, "k-", marker='o', linestyle='dashed', linewidth=2, markersize=12, color=c4, label='Arm 4')

ys5=[sinuosity5_F1, sinuosity5_F2,sinuosity5_F3,sinuosity5_F4,sinuosity5_F5]
plt.plot(xs, ys5, "k-", marker='o', linestyle='dashed', linewidth=2, markersize=12, color=c5, label='Arm 5')

plt.legend(bbox_to_anchor=(-0.1, 1),fontsize=12)
plt.xlabel('Frame', fontsize=15)
plt.ylabel('Sinuosity', fontsize=15)

plt.ylim((0.90, 1.4))
plt.savefig('...')

---------------------------------------------------------------------------------------------------------------------------
Box plots for different species
#you need to combine the last datframe including all variables for total individual and sp in one .csv file. 
#Therefore two new columns shoulbe added: species name, column named "sp" (scol, etc) and "specimen" (scol_1, scol_2, etc_)
df_multiple=pd.read_csv("Total.csv")
df_multiple

#Sinosity
import seaborn as sns

my_pal = {"curve1": '#A7414A', "curve2": '#BF988F', "curve3":'#6A8A82', "curve4":'#A37C26', "curve5":'#563838'}
ax = sns.boxplot(x="sp", y="Sinuosity",hue='curve name', palette=my_pal, data=df_multiple)
plt.ylim(1, 4)
------------------------------------------------------
#Angle
ax = sns.boxplot(x="sp", y="angle", hue="curve name", data=df_multiple, palette=my_pal)
plt.legend( bbox_to_anchor = (1,1))
------------------------------------------------------
#angle direction
ax = sns.boxplot(x="sp", y="angle direction", hue="curve name", data=df_multiple, palette=my_pal)
plt.legend( bbox_to_anchor = (1,1))
-----------------------------------------------------
#Disc distance
ax = sns.boxplot(x="sp", y="discs distance", hue="Frame", data=df_multiple, palette="Blues")
plt.legend( bbox_to_anchor = (1,1))
----------------------------------------------------



Consensu plots incldung min and standrard erorr
#Arm angle

Data_RR=df_multiple

plt.figure(figsize=(7,5))

x_RR = ['1', '2', '3', '4', '5']
c1='#A7414A'
c2='#BF988F'
c3='#6A8A82'
c4='#A37C26'
c5='#563838'

C1_mean_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame1'].mean()
C1_SE_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame1'].std()
C1_mean_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame2'].mean()
C1_SE_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame2'].std()
C1_mean_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame3'].mean()
C1_SE_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame3'].std()
C1_mean_F4=  Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame4'].mean()
C1_SE_F4= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame4'].std()
C1_mean_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame5'].mean()
C1_SE_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame5'].std()

C1_mean=[C1_mean_F1,C1_mean_F2,C1_mean_F3,C1_mean_F4,C1_mean_F5]
C1_SE=[C1_SE_F1,C1_SE_F2,C1_SE_F3,C1_SE_F4,C1_SE_F5]

plt.plot(x_RR, C1_mean,  label='arm 1',linewidth=3, markersize=12, color=c1, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C1_mean, yerr=C1_SE, fmt=c1,capsize=8, elinewidth=1, markeredgewidth=1)


C2_mean_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame1'].mean()
C2_SE_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame1'].std()
C2_mean_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame2'].mean()
C2_SE_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame2'].std()
C2_mean_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame3'].mean()
C2_SE_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame3'].std()
C2_mean_F4=  Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame4'].mean()
C2_SE_F4= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame4'].std()
C2_mean_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame5'].mean()
C2_SE_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame5'].std()

C2_mean=[C2_mean_F1,C2_mean_F2,C2_mean_F3,C2_mean_F4,C2_mean_F5]
C2_SE=[C2_SE_F1,C2_SE_F2,C2_SE_F3,C2_SE_F4,C2_SE_F5]

plt.plot(x_RR, C2_mean,  label='arm 2',linewidth=3, markersize=12, color=c2, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C2_mean, yerr=C2_SE, fmt=c2,capsize=8, elinewidth=1, markeredgewidth=1)


C3_mean_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame1'].mean()
C3_SE_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame1'].std()
C3_mean_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame2'].mean()
C3_SE_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame2'].std()
C3_mean_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame3'].mean()
C3_SE_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame3'].std()
C3_mean_F4=  Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame4'].mean()
C3_SE_F4= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame4'].std()
C3_mean_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame5'].mean()
C3_SE_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame5'].std()

C3_mean=[C3_mean_F1,C3_mean_F2,C3_mean_F3,C3_mean_F4,C3_mean_F5]
C3_SE=[C3_SE_F1,C3_SE_F2,C3_SE_F3,C3_SE_F4,C3_SE_F5]

plt.plot(x_RR, C3_mean,  label='arm 3',linewidth=3, markersize=12, color=c3, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C3_mean, yerr=C3_SE, fmt=c3,capsize=8, elinewidth=1, markeredgewidth=1)


C4_mean_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame1'].mean()
C4_SE_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame1'].std()
C4_mean_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame2'].mean()
C4_SE_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame2'].std()
C4_mean_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame3'].mean()
C4_SE_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame3'].std()
C4_mean_F4=  Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame4'].mean()
C4_SE_F4= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame4'].std()
C4_mean_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame5'].mean()
C4_SE_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame5'].std()

C4_mean=[C4_mean_F1,C4_mean_F2,C4_mean_F3,C4_mean_F4,C4_mean_F5]
C4_SE=[C4_SE_F1,C4_SE_F2,C4_SE_F3,C4_SE_F4,C4_SE_F5]

plt.plot(x_RR, C4_mean,  label='arm 4',linewidth=3, markersize=12, color=c4, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C4_mean, yerr=C4_SE, fmt=c4 ,capsize=8, elinewidth=1, markeredgewidth=1)


C5_mean_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame1'].mean()
C5_SE_F1= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame1'].std()
C5_mean_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame2'].mean()
C5_SE_F2= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame2'].std()
C5_mean_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame3'].mean()
C5_SE_F3= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame3'].std()
C5_mean_F4=  Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame4'].mean()
C5_SE_F4= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame4'].std()
C5_mean_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame5'].mean()
C5_SE_F5= Data_RR['angle'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame5'].std()

C5_mean=[C5_mean_F1, C5_mean_F2,C5_mean_F3,C5_mean_F4,C5_mean_F5]
C5_SE=[C5_SE_F1, C5_SE_F2,C5_SE_F3,C5_SE_F4,C5_SE_F5]

plt.plot(x_RR, C5_mean,  label='arm 5',linewidth=3, markersize=12, color=c5, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C5_mean, yerr=C5_SE, fmt=c5,capsize=8, elinewidth=1, markeredgewidth=1)

plt.xlabel('Frame ', fontsize = 13)
plt.ylabel('Arm angle (O. scolopendrina)', fontsize = 13)


plt.legend(framealpha=0, frameon=True);
ax = plt.gca()
plt.setp(ax.spines.values(), linewidth=1)
ax.patch.set_facecolor('white')
plt.grid(False)
plt.legend(bbox_to_anchor=(-0.15, 1),fontsize=12)

ax.tick_params(axis='both', which='major', labelsize=12)
plt.tight_layout()

-----------------------------------------------------

#sinuosity

Data_RR=df_multiple

plt.figure(figsize=(7,5))

x_RR = ['1', '2', '3', '4', '5']
c1='#A7414A'
c2='#BF988F'
c3='#6A8A82'
c4='#A37C26'
c5='#563838'

C1_mean_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame1'].mean()
C1_SE_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame1'].std()
C1_mean_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame2'].mean()
C1_SE_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame2'].std()
C1_mean_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame3'].mean()
C1_SE_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame3'].std()
C1_mean_F4=  Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame4'].mean()
C1_SE_F4= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame4'].std()
C1_mean_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame5'].mean()
C1_SE_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame5'].std()

C1_mean=[C1_mean_F1,C1_mean_F2,C1_mean_F3,C1_mean_F4,C1_mean_F5]
C1_SE=[C1_SE_F1,C1_SE_F2,C1_SE_F3,C1_SE_F4,C1_SE_F5]

plt.plot(x_RR, C1_mean,  label='arm 1',linewidth=3, markersize=12, color=c1, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C1_mean, yerr=C1_SE, fmt=c1,capsize=8, elinewidth=1, markeredgewidth=1)


C2_mean_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame1'].mean()
C2_SE_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame1'].std()
C2_mean_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame2'].mean()
C2_SE_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame2'].std()
C2_mean_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame3'].mean()
C2_SE_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame3'].std()
C2_mean_F4=  Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame4'].mean()
C2_SE_F4= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame4'].std()
C2_mean_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame5'].mean()
C2_SE_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame5'].std()

C2_mean=[C2_mean_F1,C2_mean_F2,C2_mean_F3,C2_mean_F4,C2_mean_F5]
C2_SE=[C2_SE_F1,C2_SE_F2,C2_SE_F3,C2_SE_F4,C2_SE_F5]

plt.plot(x_RR, C2_mean,  label='arm 2',linewidth=3, markersize=12, color=c2, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C2_mean, yerr=C2_SE, fmt=c2,capsize=8, elinewidth=1, markeredgewidth=1)


C3_mean_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame1'].mean()
C3_SE_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame1'].std()
C3_mean_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame2'].mean()
C3_SE_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame2'].std()
C3_mean_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame3'].mean()
C3_SE_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame3'].std()
C3_mean_F4=  Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame4'].mean()
C3_SE_F4= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame4'].std()
C3_mean_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame5'].mean()
C3_SE_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame5'].std()

C3_mean=[C3_mean_F1,C3_mean_F2,C3_mean_F3,C3_mean_F4,C3_mean_F5]
C3_SE=[C3_SE_F1,C3_SE_F2,C3_SE_F3,C3_SE_F4,C3_SE_F5]

plt.plot(x_RR, C3_mean,  label='arm 3',linewidth=3, markersize=12, color=c3, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C3_mean, yerr=C3_SE, fmt=c3,capsize=8, elinewidth=1, markeredgewidth=1)


C4_mean_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame1'].mean()
C4_SE_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame1'].std()
C4_mean_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame2'].mean()
C4_SE_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame2'].std()
C4_mean_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame3'].mean()
C4_SE_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame3'].std()
C4_mean_F4=  Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame4'].mean()
C4_SE_F4= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame4'].std()
C4_mean_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame5'].mean()
C4_SE_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame5'].std()

C4_mean=[C4_mean_F1,C4_mean_F2,C4_mean_F3,C4_mean_F4,C4_mean_F5]
C4_SE=[C4_SE_F1,C4_SE_F2,C4_SE_F3,C4_SE_F4,C4_SE_F5]

plt.plot(x_RR, C4_mean,  label='arm 4',linewidth=3, markersize=12, color=c4, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C4_mean, yerr=C4_SE, fmt=c4 ,capsize=8, elinewidth=1, markeredgewidth=1)


C5_mean_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame1'].mean()
C5_SE_F1= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame1'].std()
C5_mean_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame2'].mean()
C5_SE_F2= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame2'].std()
C5_mean_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame3'].mean()
C5_SE_F3= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame3'].std()
C5_mean_F4=  Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame4'].mean()
C5_SE_F4= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame4'].std()
C5_mean_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame5'].mean()
C5_SE_F5= Data_RR['Sinuosity'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame5'].std()

C5_mean=[C5_mean_F1, C5_mean_F2,C5_mean_F3,C5_mean_F4,C5_mean_F5]
C5_SE=[C5_SE_F1, C5_SE_F2,C5_SE_F3,C5_SE_F4,C5_SE_F5]

plt.plot(x_RR, C5_mean,  label='arm 5',linewidth=3, markersize=12, color=c5, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C5_mean, yerr=C5_SE, fmt=c5,capsize=8, elinewidth=1, markeredgewidth=1)

plt.xlabel('Frame ', fontsize = 13)
plt.ylabel('Sinuosity (O. scolopendrina)', fontsize = 13)


plt.legend(framealpha=0, frameon=True);
ax = plt.gca()
plt.setp(ax.spines.values(), linewidth=1)
ax.patch.set_facecolor('white')
plt.grid(False)
plt.legend(bbox_to_anchor=(-0.15, 1),fontsize=12)

ax.tick_params(axis='both', which='major', labelsize=12)
plt.tight_layout()

-----------------------------------------------------------------------------------

#slip angle

Data_RR=df_multiple

plt.figure(figsize=(7,5))

x_RR = ['1-2', '2-3', '3-4', '4-5']
c1='#A7414A'
c2='#BF988F'
c3='#6A8A82'
c4='#A37C26'
c5='#563838'


C1_mean_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame2'].mean()
C1_SE_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame2'].std()
C1_mean_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame3'].mean()
C1_SE_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame3'].std()
C1_mean_F4=  Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame4'].mean()
C1_SE_F4= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame4'].std()
C1_mean_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame5'].mean()
C1_SE_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve1'][Data_RR['Frame'] == 'Frame5'].std()

C1_mean=[C1_mean_F2,C1_mean_F3,C1_mean_F4,C1_mean_F5]
C1_SE=[C1_SE_F2,C1_SE_F3,C1_SE_F4,C1_SE_F5]

plt.plot(x_RR, C1_mean,  label='arm 1',linewidth=3, markersize=12, color=c1, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C1_mean, yerr=C1_SE, fmt=c1,capsize=8, elinewidth=1, markeredgewidth=1)


C2_mean_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame2'].mean()
C2_SE_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame2'].std()
C2_mean_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame3'].mean()
C2_SE_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame3'].std()
C2_mean_F4=  Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame4'].mean()
C2_SE_F4= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame4'].std()
C2_mean_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame5'].mean()
C2_SE_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve2'][Data_RR['Frame'] == 'Frame5'].std()

C2_mean=[C2_mean_F2,C2_mean_F3,C2_mean_F4,C2_mean_F5]
C2_SE=[C2_SE_F2,C2_SE_F3,C2_SE_F4,C2_SE_F5]

plt.plot(x_RR, C2_mean,  label='arm 2',linewidth=3, markersize=12, color=c2, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C2_mean, yerr=C2_SE, fmt=c2,capsize=8, elinewidth=1, markeredgewidth=1)

C3_mean_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame2'].mean()
C3_SE_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame2'].std()
C3_mean_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame3'].mean()
C3_SE_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame3'].std()
C3_mean_F4=  Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame4'].mean()
C3_SE_F4= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame4'].std()
C3_mean_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame5'].mean()
C3_SE_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve3'][Data_RR['Frame'] == 'Frame5'].std()

C3_mean=[C3_mean_F2,C3_mean_F3,C3_mean_F4,C3_mean_F5]
C3_SE=[C3_SE_F2,C3_SE_F3,C3_SE_F4,C3_SE_F5]

plt.plot(x_RR, C3_mean,  label='arm 3',linewidth=3, markersize=12, color=c3, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C3_mean, yerr=C3_SE, fmt=c3,capsize=8, elinewidth=1, markeredgewidth=1)

C4_mean_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame2'].mean()
C4_SE_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame2'].std()
C4_mean_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame3'].mean()
C4_SE_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame3'].std()
C4_mean_F4=  Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame4'].mean()
C4_SE_F4= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame4'].std()
C4_mean_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame5'].mean()
C4_SE_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve4'][Data_RR['Frame'] == 'Frame5'].std()

C4_mean=[C4_mean_F2,C4_mean_F3,C4_mean_F4,C4_mean_F5]
C4_SE=[C4_SE_F2,C4_SE_F3,C4_SE_F4,C4_SE_F5]

plt.plot(x_RR, C4_mean,  label='arm 4',linewidth=3, markersize=12, color=c4, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C4_mean, yerr=C4_SE, fmt=c4 ,capsize=8, elinewidth=1, markeredgewidth=1)

C5_mean_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame2'].mean()
C5_SE_F2= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame2'].std()
C5_mean_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame3'].mean()
C5_SE_F3= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame3'].std()
C5_mean_F4=  Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame4'].mean()
C5_SE_F4= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame4'].std()
C5_mean_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame5'].mean()
C5_SE_F5= Data_RR['angle direction'][Data_RR['sp'] == 'scol'][Data_RR['curve name'] == 'curve5'][Data_RR['Frame'] == 'Frame5'].std()

C5_mean=[C5_mean_F2,C5_mean_F3,C5_mean_F4,C5_mean_F5]
C5_SE=[C5_SE_F2,C5_SE_F3,C5_SE_F4,C5_SE_F5]

plt.plot(x_RR, C5_mean,  label='arm 5',linewidth=3, markersize=12, color=c5, marker='o', linestyle='dashed')
plt.errorbar(x_RR, C5_mean, yerr=C5_SE, fmt=c5,capsize=8, elinewidth=1, markeredgewidth=1)

plt.xlabel('Frame ', fontsize = 13)
plt.ylabel('Slip angle (O. scolopendrina)', fontsize = 13)


plt.legend(framealpha=0, frameon=True);
ax = plt.gca()
plt.setp(ax.spines.values(), linewidth=1)
ax.patch.set_facecolor('white')
plt.grid(False)
plt.legend(bbox_to_anchor=(-0.15, 1),fontsize=12)

ax.tick_params(axis='both', which='major', labelsize=12)
plt.tight_layout()


